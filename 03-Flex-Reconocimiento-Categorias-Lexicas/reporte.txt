------------------- REPORTE TP NUMERO 3 -------------------
-------------------- IDENTIFICADORES --------------------
Identificador	 	 	 Cantidad de Repeticiones
lptr	 	 	 	 	 	 	6
swapped	 	 	 	 	 	 	8
temp	 	 	 	 	 	 	14
malloc	 	 	 	 	 	 	2
ptr1	 	 	 	 	 	 	28
getchar	 	 	 	 	 	 	2
printf	 	 	 	 	 	 	8
NULL	 	 	 	 	 	 	8
i	 	 	 	 	 	 	12
list_size	 	 	 	 	 	 	2
arr3	 	 	 	 	 	 	1
arr2	 	 	 	 	 	 	1
e4	 	 	 	 	 	 	1
E	 	 	 	 	 	 	1
array	 	 	 	 	 	 	1
arr	 	 	 	 	 	 	4
main	 	 	 	 	 	 	2
printList	 	 	 	 	 	 	8
b	 	 	 	 	 	 	8
a	 	 	 	 	 	 	8
swap	 	 	 	 	 	 	6
start	 	 	 	 	 	 	24
bubbleSort	 	 	 	 	 	 	6
start_ref	 	 	 	 	 	 	8
insert	 	 	 	 	 	 	6
next	 	 	 	 	 	 	14
data	 	 	 	 	 	 	24
Node	 	 	 	 	 	 	38
constanteA	 	 	 	 	 	 	1
define	 	 	 	 	 	 	1
stdlib	 	 	 	 	 	 	2
h	 	 	 	 	 	 	4
stdio	 	 	 	 	 	 	2
include	 	 	 	 	 	 	4
----------------- CADENAS LITERALES -----------------
cadenaLiteral	Longitud
"%d "               	5
"\n"                	4
"\n Linked list after sorting "	31
"\n Linked list before sorting "	32
----------------- CONSTANTES DECIMALES -----------------
1
6
90
1
11
2
56
12
1
99
56
4
12
90
1
11
2
56
12
Acumulado valor decimal 523
----------------- CONSTANTES OCTALES -----------------
0 Valor Decimal: 0
0 Valor Decimal: 0
0 Valor Decimal: 0
0 Valor Decimal: 0
0 Valor Decimal: 0
016 Valor Decimal: 14
0123456 Valor Decimal: 42798
04234 Valor Decimal: 2204
02 Valor Decimal: 2
----------------- CONSTANTES HEXADECIMALES -----------------
0xA Valor Decimal: 10
0Xffdd Valor Decimal: 65501
0xABC Valor Decimal: 2748
0x99 Valor Decimal: 153
------------- CONSTANTES REALES -------------
65.6e-1
Parte entera: 65
Parte mantisa: 0
33.56
Parte entera: 33
Parte mantisa: 0
------------- CONSTANTES CARACTER -------------
Caracter 	 	 	 Cantidad
a 1968719520 
------------- Operadores y Caracteres de Puntuacion	Cantidad de Repeticiones -------------
		!															4
		&															2
		+															2
		-															29
		=															41
		]															7
		[															7
		)															56
		,															36
		(															56
		}															25
		*															42
		;															87
		{															25
		>															34
		<															6
------------- PALABRAS RESERVADAS -------------
int
struct
struct
void
int
struct
struct
void
while
if
while
do
return
if
struct
struct
int
struct
void
while
struct
struct
void
struct
sizeof
struct
struct
int
struct
void
return
for
struct
int
int
int
struct
void
struct
struct
void
struct
void
int
struct
void
struct
int
struct
while
if
while
do
return
if
struct
struct
int
struct
void
while
struct
struct
void
struct
sizeof
struct
struct
int
struct
void
return
for
struct
int
int
int
float
int
int
struct
void
struct
struct
void
struct
void
int
struct
void
struct
int
struct
Comentarios Simples
// C program to implement Bubble Sort on singly linked list 
// C program to implement Bubble Sort on singly linked list 
Comentarios Compuestos
/* function to swap data of two nodes a and b*/
/* function to swap data of two nodes a and b*/
/* Checking for empty list */
/* Bubble sort the given linked list */
/* Function to print nodes in a given linked list */
/* Function to insert a node at the beginning of a linked list */
/* print list after sorting */
/* sort the linked list */
/* print list before sorting */
/* Create linked list from the array arr[]. Created linked list will be 1->11->2->56->12 */
/* start with empty linked list */
/* Function to print nodes in a given linked list */
/* Function to swap data of two nodes a and b*/
/* Function to bubble sort the given linked list */
/* Function to insert a node at the beginning of a linked list */
/* structure for a node */
/* Checking for empty list */
/* Bubble sort the given linked list */
/* Function to print nodes in a given linked list */
/* Function to insert a node at the beginning of a linked list */
/* print list after sorting */
/* sort the linked list */
/* print list before sorting */
/* Create linked list from the array arr[].Created linked list will be 1->11->2->56->12 */
/* start with empty linked list */
/* Function to print nodes in a given linked list */
/* Function to swap data of two nodes a and b*/
/* Function to bubble sort the given linked list */
/* Function to insert a node at the beginning of a linked list */
/* structure for a node */
------------- PALABRAS NO RECONOCIDAS -------------
Linea: 108	Palabra no Reconocida: .
Linea: 108	Palabra no Reconocida: #
Linea: 107	Palabra no Reconocida: .
Linea: 107	Palabra no Reconocida: #
Linea: 5	Palabra no Reconocida: $
Linea: 4	Palabra no Reconocida: #
Linea: 3	Palabra no Reconocida: .
Linea: 3	Palabra no Reconocida: #
Linea: 2	Palabra no Reconocida: .
Linea: 2	Palabra no Reconocida: #
